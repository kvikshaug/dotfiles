#!/usr/bin/fish

# Override the shell prompt
function fish_prompt --description 'Write out the prompt'

  # Just calculate these once, to save a few cycles when displaying the prompt
  if not set -q __fish_prompt_hostname
    set -g __fish_prompt_hostname (hostname|cut -d . -f 1)
  end

  if not set -q __fish_prompt_normal
    set -g __fish_prompt_normal (set_color normal)
  end

  switch $USER

    case root

    if not set -q __fish_prompt_cwd
      if set -q fish_color_cwd_root
        set -g __fish_prompt_cwd (set_color $fish_color_cwd_root)
      else
        set -g __fish_prompt_cwd (set_color $fish_color_cwd)
      end
    end

    printf '%s@%s %s%s%s# ' $USER $__fish_prompt_hostname "$__fish_prompt_cwd" (prompt_pwd) "$__fish_prompt_normal"

    case '*'

    if not set -q __fish_prompt_cwd
      set -g __fish_prompt_cwd (set_color $fish_color_cwd)
    end

    # git prompt
    set gitprompt (git symbolic-ref HEAD 2>/dev/null | sed 's/refs\/heads\///g')
    if not test -z $gitprompt
      set gitprompt (set_color "cyan")" $gitprompt"(set_color "yellow")
      # stashed changes?
      git rev-parse --verify refs/stash >/dev/null 2>&1
      if test $status -eq 0
        set gitstashed "\$"
      end
      # unstaged changes?
      git diff --no-ext-diff --ignore-submodules --quiet --exit-code
      if test $status -ne 0
        set gitunstaged "*"
      end
      # staged changes?
      git diff-index --cached --quiet --ignore-submodules HEAD --
      if test $status -ne 0
        set gitstaged "+"
      end
    end

    printf '%s@%s %s%s%s%s%s%s%s> ' $USER $__fish_prompt_hostname "$__fish_prompt_cwd" (prompt_pwd) $gitprompt $gitstashed $gitunstaged $gitstaged "$__fish_prompt_normal"

  end
end

